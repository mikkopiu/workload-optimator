{"version":3,"sources":["../../src/js/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Course model\r\n     *\r\n     * @class\r\n     */\r\n    class Course {\r\n\r\n        /**\r\n         * Course must have a name,\r\n         * amount of points awarded and work required (in hours).\r\n         *\r\n         * @constructor\r\n         * @param {String} name Course name\r\n         * @param {Number} points Points awarded on completion\r\n         * @param {Number} work Work required to complete, in hours\r\n         */\r\n        constructor(name, points, work) {\r\n            this.name = name;\r\n            this.points = points;\r\n            this.work = work;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Optimator model\r\n     * Can be used to optimize amount of points in a given set of hours.\r\n     *\r\n     * @class\r\n     */\r\n    class Optimator {\r\n\r\n        /**\r\n         * The Optimator takes an Array of Course-models and the maximum amount of hours available.\r\n         *\r\n         * @constructor\r\n         * @param {Course[]} [courses=[]] Courses to optimize\r\n         * @param {Number} [maxHours=0] Maximum amount of amount available\r\n         */\r\n        constructor(courses = [], maxHours = 0) {\r\n            this._courses = courses;\r\n            this._maxHours = maxHours;\r\n        }\r\n\r\n        get maxHours() {\r\n            return this._maxHours;\r\n        }\r\n\r\n        /**\r\n         * Setter for maxHours\r\n         *\r\n         * @throws Error if value is not a positive number\r\n         * @param hours\r\n         */\r\n        set maxHours(hours) {\r\n            if (hours >= 0) {\r\n                this._maxHours = hours;\r\n            } else {\r\n                throw new Error('maxHours must be a positive number!');\r\n            }\r\n        }\r\n\r\n        get courses() {\r\n            return this._courses;\r\n        }\r\n\r\n        /**\r\n         * Setter for courses\r\n         *\r\n         * @throws Error if value is not an Array of Courses\r\n         * @param courses\r\n         */\r\n        set courses(courses) {\r\n            if (Array.isArray(courses)) {\r\n                if (courses.length > 0 && !(courses[0] instanceof Course)) {\r\n                    throw new Error('courses must be an Array of Courses!');\r\n                } else {\r\n                    this._courses = courses;\r\n                }\r\n            } else {\r\n                throw new Error('courses must be an Array!');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get a Course by its row index\r\n         * @param {Number} ind\r\n         * @returns {Course}\r\n         */\r\n        getCourseByInd(ind) {\r\n            return this.courses[ind];\r\n        }\r\n\r\n        /**\r\n         * Add a Course to the Optimator.\r\n         *\r\n         * @method\r\n         * @param {Course} course\r\n         */\r\n        addCourse(course = null) {\r\n            if (course !== null && course instanceof Course) {\r\n                this.courses.push(course);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Remove a Course from the Optimator using its index\r\n         *\r\n         * @method\r\n         * @param {Number} ind\r\n         */\r\n        removeCourseByInd(ind = -1) {\r\n            if (ind >= 0) {\r\n                if (this.courses.length > ind) {\r\n                    this.courses.splice(ind, 1);\r\n                } else {\r\n                    throw new Error('Index out of bounds!');\r\n                }\r\n            } else {\r\n                throw new Error('Index must be a positive integer!');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Remove a Course by reference.\r\n         *\r\n         * @method\r\n         * @param {Course} course\r\n         */\r\n        removeCourse(course = null) {\r\n            if (course !== null) {\r\n                let ind = this.courses.indexOf(course);\r\n                if (ind >= 0) {\r\n                    this.courses.splice(ind, 1);\r\n                } else {\r\n                    throw new Error('Course not in Optimator\\'s courses lists!');\r\n                }\r\n            } else {\r\n                throw new Error('Give a course to remove!');\r\n            }\r\n        }\r\n    }\r\n\r\n    class OptimatorForm {\r\n        /* jshint ignore:start */\r\n        constructor({courses = [], maxHours = 0} = {}) {\r\n            this.optimator = new Optimator(courses, maxHours);\r\n            this._onSubmit = this._onSubmit.bind(this);\r\n            this._onAddRow = this._onAddRow.bind(this);\r\n            this._onRemoveRow = this._onRemoveRow.bind(this);\r\n        }\r\n        /* jshint ignore:end */\r\n\r\n        /**\r\n         * Init the form.\r\n         * Sets event listeners.\r\n         */\r\n        init() {\r\n            let addBtn = document.getElementById('add-btn');\r\n            this._formEl = document.getElementById('courses-form');\r\n            this._coursesEl = document.getElementById('courses-table-body');\r\n            this._resultsEl = document.getElementById('results-table-body');\r\n\r\n            let initialRowDeleteBtn = this.coursesEl.querySelector('.remove-btn');\r\n\r\n            // Clear out any previous listeners\r\n            this._formEl.removeEventListener('submit', this._onSubmit);\r\n            this._formEl.addEventListener('submit', this._onSubmit);\r\n            addBtn.removeEventListener('click', this._onAddRow);\r\n            addBtn.addEventListener('click', this._onAddRow);\r\n            initialRowDeleteBtn.removeEventListener('click', this._onRemoveRow);\r\n            initialRowDeleteBtn.addEventListener('click', this._onRemoveRow);\r\n        }\r\n\r\n        /**\r\n         * @returns {Element|*}\r\n         */\r\n        get formEl() {\r\n            return this._formEl;\r\n        }\r\n\r\n        /**\r\n         * @returns {Element|*}\r\n         */\r\n        get coursesEl() {\r\n            return this._coursesEl;\r\n        }\r\n\r\n        /**\r\n         * @returns {Element|*}\r\n         */\r\n        get resultsEl() {\r\n            return this._resultsEl;\r\n        }\r\n\r\n        /**\r\n         * Add a row to the courses table\r\n         */\r\n        addRow() {\r\n            let rowEl = document.createElement('tr');\r\n            rowEl.classList.add('input-row');\r\n            rowEl.innerHTML = `<td>\r\n                <input class=\"input-name\" type=\"text\" placeholder=\"Course name\" required>\r\n            </td>\r\n            <td>\r\n                <input class=\"input-points\" type=\"number\" min=\"0\" placeholder=\"Course points\" required>\r\n            </td>\r\n            <td>\r\n                <input class=\"input-work\" type=\"number\" min=\"0\" placeholder=\"Work required in hours\" required>\r\n            </td>\r\n            <td>\r\n                <button class=\"remove-btn\" type=\"button\">Remove</button>\r\n            </td>`;\r\n\r\n            rowEl.querySelector('.remove-btn').addEventListener('click', this._onRemoveRow);\r\n\r\n            this.coursesEl.appendChild(rowEl);\r\n        }\r\n\r\n        /**\r\n         * Remove a row from the courses table\r\n         * @param {Number} ind Row index to remove\r\n         */\r\n        removeRow(ind) {\r\n            let targetRow = this.coursesEl.querySelectorAll('tr')[ind];\r\n            this.coursesEl.removeChild(targetRow);\r\n        }\r\n\r\n        /**\r\n         * Add row -button handler\r\n         * @param {MouseEvent} evt\r\n         * @private\r\n         */\r\n        _onAddRow(evt) {\r\n            evt.preventDefault();\r\n            this.addRow();\r\n        }\r\n\r\n        /**\r\n         * Remove-button handler\r\n         * @param {MouseEvent} evt\r\n         * @private\r\n         */\r\n        _onRemoveRow(evt) {\r\n            evt.preventDefault();\r\n            // rowIndex is 1-based\r\n            this.removeRow(evt.target.parentElement.parentElement.rowIndex - 1);\r\n        }\r\n\r\n        /**\r\n         * Optimize inputted courses on form submit,\r\n         * and print the results.\r\n         *\r\n         * @param evt\r\n         * @private\r\n         */\r\n        _onSubmit(evt) {\r\n            evt.preventDefault();\r\n            console.warn('onSubmit not implemented!');\r\n        }\r\n\r\n        /**\r\n         * Print optimized results to the results table\r\n         *\r\n         * @param {Course[]} data\r\n         * @private\r\n         */\r\n        _printResults(data) {\r\n            let output = '';\r\n\r\n            if (data.length > 0) {\r\n                data.forEach(d => {\r\n                    output += `<tr class=\"new-item\">\r\n                    <td>${d.name}</td>\r\n                    <td>${d.points}</td>\r\n                    <td>${d.work}</td>\r\n                </tr>`;\r\n                });\r\n            } else {\r\n                output = `<tr class=\"new-item\">\r\n                    <td colspan=\"3\" class=\"empty-row\">No courses added</td>\r\n                </tr>`;\r\n            }\r\n\r\n            this._resultsEl.innerHTML = output;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * MAIN ENTRY POINT\r\n     */\r\n    function main() {\r\n        const FORM = new OptimatorForm();\r\n        FORM.init();\r\n    }\r\n\r\n    main();\r\n})();\r\n"]}